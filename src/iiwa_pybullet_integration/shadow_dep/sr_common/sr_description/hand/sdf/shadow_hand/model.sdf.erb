<?xml version='1.0'?>
<%
require 'matrix'
require 'erb'





class Finger
    #constants
    M_PI = 3.1415926535897931
    attr_accessor :knuckle,:proximal,:middle,:distal,:palm,:fingername
    def initialize(palm,biase,fingername)
        @fingername = fingername
        @palm = palm
        @knuckle =  {  # object pose
                        'pose'=> [0.033+biase[0],
                                   -0.01+biase[1],
                                   0.342+biase[2],
                                   0,0,0],
                        # inetia 
                        'pose_i'=> [0,0,0,
                                    0,0,0],                   
                        'mass'=> 0.008,
                        'ixx'=> 0.00000026 ,'ixy'=> 0     ,'ixz'=> 0 ,
                        'iyy'=> 0.00000026 ,'iyz'=> 0     ,'izz'=>0.00000032,
                        # joint 
                        "name"       =>"knuckle",
                        "p_name"       =>"palm",
                        "j_name"     =>"J4",
                        "j_type"     =>"revolute",
                        "j_axis"     => [0,-1,0],
                        "j_limit"    => [-20/180*M_PI,20/180*M_PI], #[lower,upper]
                        "j_effort"   => 2.0,
                        "j_velocity" => 2.0,
                        "j_damping"  => 0.1,
                        "j_friction" => 0.0
                    } 
        @proximal = {  # object pose
                    'pose'=> [0+knuckle['pose'][0],
                            0+knuckle['pose'][1],
                            0+knuckle['pose'][2],
                            0,0,0],
                    # inetia 
                    'pose_i'=> [0,0,0.0225,
                                    0,0,0],                   
                    'mass'=> 0.030,
                    'ixx'=> 0.0000098 ,'ixy'=> 0     ,'ixz'=> 0 ,
                    'iyy'=> 0.00001 ,'iyz'=> 0     ,'izz'=>0.0000018 ,
                     # joint 
                     "name"       =>"proximal",
                     "p_name"     =>"knuckle",
                     "j_name"     =>"J3",
                     "j_type"     =>"revolute",
                     "j_axis"     => [1,0,0],
                     "j_limit"    => [0,M_PI/2], #[lower,upper]
                     "j_effort"   => 2.0,
                     "j_velocity" => 2.0,
                     "j_damping"  => 0.1,
                     "j_friction" => 0.0
                } 
        @middle =   {  # object pose
                    'pose'=> [0+proximal['pose'][0],
                            0+proximal['pose'][1],
                            0.045+proximal['pose'][2],
                            0,0,0],
                    # inetia 
                    'pose_i'=> [0,0,0.0125,
                                    0,0,0],                   
                    'mass'=> 0.017,
                    'ixx'=>0.0000026 ,'ixy'=> 0     ,'ixz'=> 0 ,
                    'iyy'=>0.0000027 ,'iyz'=> 0     ,'izz'=>0.00000087,
                    # joint 
                    "name"       =>"middle",
                    "p_name"     =>"proximal",
                    "j_name"     =>"J2",
                    "j_type"     =>"revolute",
                    "j_axis"     => [1,0,0],
                    "j_limit"    => [0,M_PI/2], #[lower,upper]
                    "j_effort"   => 2.0,
                    "j_velocity" => 2.0,
                    "j_damping"  => 0.1,
                    "j_friction" => 0.0 
                }
        @distal =   {  # object pose
                'pose'=> [0+middle['pose'][0],
                          0+middle['pose'][1],
                          0.025+middle['pose'][2],
                          0,0,0],
                # inetia 
                'pose_i'=> [0,0,0.012,
                                0,0,0],                   
                'mass'=> 0.012,
                'ixx'=>0.00000094 ,'ixy'=> 0     ,'ixz'=> 0 ,
                'iyy'=>0.0000011 ,'iyz'=> 0     ,'izz'=>0.00000053,
                # joint 
                "name"       =>"distal",
                "p_name"     =>"middle",
                "j_name"     =>"J1",
                "j_type"     =>"revolute",
                "j_axis"     => [1,0,0],
                "j_limit"    => [0,M_PI/2], #[lower,upper]
                "j_effort"   => 2.0,
                "j_velocity" => 2.0,
                "j_damping"  => 0.1,
                "j_friction" => 0.0
            }

    end
end

class Thumb
    attr_accessor :thbase,:thproximal,:thhub,:thmiddle,:thdistal,:palm,:meshPath
    #constants
    M_PI = 3.1415926535897931
    def initialize(palm)
        @palm = palm
        @thbase =  {  # object pose
                        'pose'=> [0.034,-0.0185,0.276,
                                   0.0,0.785398,0],
                        # inetia 
                        'pose_i'=> [0,0,0,
                                    0,0,0],                   
                        'mass'=> 0.010,
                        'ixx'=> 0.00000016 ,'ixy'=> 0     ,'ixz'=> 0 ,
                        'iyy'=> 0.00000016 ,'iyz'=> 0     ,'izz'=>0.00000016 ,
                        # joint 
                        "name"       =>"thbase",
                        "p_name"       =>"palm",
                        "j_name"     =>"THJ5",
                        "j_type"     =>"revolute",
                        "j_axis"     => [0,0,1],
                        "j_limit"    => [-60/180*M_PI,60/180*M_PI], #[lower,upper]
                        "j_effort"   => 0.2,
                        "j_velocity" => 4.0,
                        "j_damping"  => 0.2
                    

                    } 
        @thproximal = {  # object pose
                        'pose'=> [ 0.0+thbase['pose'][0],
                                   0.0+thbase['pose'][1],
                                   0.0+thbase['pose'][2],
                                   0.0,0.785398,0.0],
                        # inetia 
                        'pose_i'=> [0,0,0.019,
                                    0,0,0],                   
                        'mass'=> 0.040,
                        'ixx'=> 0.0000136 ,'ixy'=> 0     ,'ixz'=> 0 ,
                        'iyy'=> 0.0000136 ,'iyz'=> 0     ,'izz'=>0.00000313,
                        # joint 
                        "name"       =>"thproximal",
                        "p_name"     =>"thbase",
                        "j_name"     =>"THJ4",
                        "j_type"     =>"revolute",
                        "j_axis"     => [1,0,0],
                        "j_limit"    => [0,70/180*M_PI], #[lower,upper]
                        "j_effort"   => 3.0,
                        "j_velocity" => 4.0,
                        "j_damping"  => 0.2
                     } 
        @thhub = {  # object pose
                     'pose'=>[ 0.02687+thproximal['pose'][0],
                               0.0    +thproximal['pose'][1],
                               0.02687+thproximal['pose'][2],
                               0.0,0.785398,0.0],
                     # inetia 
                     'pose_i'=> [0,0,0,
                                 0,0,0],                   
                     'mass'=> 0.005,
                     'ixx'=> 0.000001 ,'ixy'=> 0     ,'ixz'=> 0 ,
                     'iyy'=> 0.000001 ,'iyz'=> 0     ,'izz'=>0.0000003 ,
                     # joint 
                     "name"       =>"thhub",
                     "p_name"     =>"thproximal",
                     "j_name"     =>"THJ3",
                     "j_type"     =>"fixed",
                     "j_axis"     => [1,0,0]
                }
        @thmiddle = {  # object pose
                  'pose'=> [0.0+thhub['pose'][0],
                            0.0+thhub['pose'][1],
                            0.0+thhub['pose'][2],
                            0.0,0.785398,0.0],
                  # inetia 
                  'pose_i'=> [0,0,016,
                              0,0,0],                   
                  'mass'=> 0.020,
                  'ixx'=> 0.0000051 ,'ixy'=> 0     ,'ixz'=> 0 ,
                  'iyy'=> 0.0000051 ,'iyz'=> 0     ,'izz'=>0.00000121 ,
                  # joint 
                  "name"       =>"thmiddle",
                  "p_name"     =>"thhub",
                  "j_name"     =>"THJ2",
                  "j_type"     =>"revolute",
                  "j_axis"     => [0,-1,0],
                  "j_limit"    => [-40/180*M_PI,40/180*M_PI], #[lower,upper]
                  "j_effort"   => 2.0,
                  "j_velocity" => 2.0,
                  "j_damping"  => 0.1
               } 
        @thdistal = {  # object pose
               'pose'=> [ 0.022628+thmiddle['pose'][0],
                          0.0+thmiddle['pose'][1],
                          0.022627+thmiddle['pose'][2],
                         -0.785398,0.0,-1.5708],
               # inetia 
               'pose_i'=> [0,0,01375,
                           0,0,0],                   
               'mass'=> 0.016,
               'ixx'=> 0.0000021 ,'ixy'=> 0     ,'ixz'=> 0 ,
               'iyy'=> 0.0000022 ,'iyz'=> 0     ,'izz'=>0.000001 ,
                # joint 
                "name"       =>"thdistal",
                "p_name"     =>"thmiddle",
                "j_name"     =>"THJ1",
                "j_type"     =>"revolute",
                "j_axis"     => [1,0,0],
                "j_limit"    => [0,90.0*M_PI/180], #[lower,upper]
                "j_effort"   => 1.0,
                "j_velocity" => 4.0,
                "j_damping"  => 0.2
            }
        @meshPath ={#path to the mesh for thumb
            'thproximal' => "model://shadow_hand/TH3_z.dae",
            'thmiddle'   => "model://shadow_hand/TH2_z.dae",
            'thdistal'   => "model://shadow_hand/TH1_z.dae"
            
                    } 
        
    end
end


class LFinger
    #constants
    M_PI = 3.1415926535897931
    attr_accessor :metacarpal,:knuckle,:proximal,:middle,:distal,:palm,:fingername
    def initialize(palm,biase,fingername)
        @fingername = fingername
        @palm = palm
        @metacarpal =  {  # object pose
                        'pose'=> [-0.031,-0.01,0.26771,
                                   0,0,0],
                        # inetia 
                        'pose_i'=> [0,0,0.04,
                                    0,0,0],                   
                        'mass'=> 0.030,
                        'ixx'=> 0.0000145 ,'ixy'=> 0     ,'ixz'=> 0 ,
                        'iyy'=> 0.00001638 ,'iyz'=> 0     ,'izz'=>0.000004272,
                        # joint 
                        "name"       =>"metacarpal",
                        "p_name"       =>"palm",
                        "j_name"     =>"LFJ5",
                        "j_type"     =>"revolute",
                        "j_axis"     => [0,-1,0],
                        "j_limit"    => [-20/180*M_PI,20/180*M_PI], #[lower,upper]
                        "j_effort"   => 2.0,
                        "j_velocity" => 2.0,
                        "j_damping"  => 0.1 
                    } 
        @knuckle =  {  # object pose
                        'pose'=> [0.0+metacarpal['pose'][0],
                                   0+metacarpal['pose'][1],
                                   0.06579+metacarpal['pose'][2],
                                   0,0,0],
                        # inetia 
                        'pose_i'=> [0,0,0,
                                    0,0,0],                   
                        'mass'=> 0.008,
                        'ixx'=> 0.00000026 ,'ixy'=> 0     ,'ixz'=> 0 ,
                        'iyy'=> 0.00000026 ,'iyz'=> 0     ,'izz'=>0.00000032,
                        # joint 
                        "name"       =>"knuckle",
                        "p_name"       =>"palm",
                        "j_name"     =>"J4",
                        "j_type"     =>"revolute",
                        "j_axis"     => [0,-1,0],
                        "j_limit"    => [-20/180*M_PI,20/180*M_PI], #[lower,upper]
                        "j_effort"   => 2.0,
                        "j_velocity" => 2.0,
                        "j_damping"  => 0.1 
                    } 
        @proximal = {  # object pose
                    'pose'=> [0+knuckle['pose'][0],
                            0+knuckle['pose'][1],
                            0+knuckle['pose'][2],
                            0,0,0],
                    # inetia 
                    'pose_i'=> [0,0,0.0225,
                                    0,0,0],                   
                    'mass'=> 0.030,
                    'ixx'=> 0.0000098 ,'ixy'=> 0     ,'ixz'=> 0 ,
                    'iyy'=> 0.00001 ,'iyz'=> 0     ,'izz'=>0.0000018 ,
                     # joint 
                     "name"       =>"proximal",
                     "p_name"     =>"knuckle",
                     "j_name"     =>"J3",
                     "j_type"     =>"revolute",
                     "j_axis"     => [1,0,0],
                     "j_limit"    => [0,M_PI/2], #[lower,upper]
                     "j_effort"   => 2.0,
                     "j_velocity" => 2.0,
                     "j_damping"  => 0.1 
                } 
        @middle =   {  # object pose
                    'pose'=> [0+proximal['pose'][0],
                            0+proximal['pose'][1],
                            0.045+proximal['pose'][2],
                            0,0,0],
                    # inetia 
                    'pose_i'=> [0,0,0.0125,
                                    0,0,0],                   
                    'mass'=> 0.017,
                    'ixx'=>0.0000026 ,'ixy'=> 0     ,'ixz'=> 0 ,
                    'iyy'=>0.0000027 ,'iyz'=> 0     ,'izz'=>0.00000087,
                    # joint 
                    "name"       =>"middle",
                    "p_name"     =>"proximal",
                    "j_name"     =>"J2",
                    "j_type"     =>"revolute",
                    "j_axis"     => [1,0,0],
                    "j_limit"    => [0,M_PI/2], #[lower,upper]
                    "j_effort"   => 2.0,
                    "j_velocity" => 2.0,
                    "j_damping"  => 0.1 
                }
        @distal =   {  # object pose
                'pose'=> [0+middle['pose'][0],
                          0+middle['pose'][1],
                          0.025+middle['pose'][2],
                          0,0,0],
                # inetia 
                'pose_i'=> [0,0,0.012,
                                0,0,0],                   
                'mass'=> 0.012,
                'ixx'=>0.00000094 ,'ixy'=> 0     ,'ixz'=> 0 ,
                'iyy'=>0.0000011 ,'iyz'=> 0     ,'izz'=>0.00000053,
                # joint 
                "name"       =>"distal",
                "p_name"     =>"middle",
                "j_name"     =>"J1",
                "j_type"     =>"revolute",
                "j_axis"     => [1,0,0],
                "j_limit"    => [0,M_PI/2], #[lower,upper]
                "j_effort"   => 2.0,
                "j_velocity" => 2.0,
                "j_damping"  => 0.1 
            }

    end

end

def a_to_s(v)#converts array to string
    Array(v).join(" ")
end
# This is where ruby code goes
 # meshes to include
    distal_path   = "model://shadow_hand/F1.dae"
    middle_path   = "model://shadow_hand/F2.dae"
    proximal_path = "model://shadow_hand/F3.dae"
    knuckle_path  = "model://shadow_hand/knuckle.dae"
    
    palm_path      = "model://shadow_hand/palm.dae"
    palm_path_m    = "model://shadow_hand/palm_mirror.dae"
    forearm_path   = "model://shadow_hand/forearm.dae"
    forearm_path_c = "model://shadow_hand/forearm.dae"
    wrist_path     = "model://shadow_hand/wrist.dae"

    lfmetacarpal   = "model://shadow_hand/lfmetacarpal.dae"

    
#constants
    M_PI = 3.1415926535897931

# model variables
    # constant pose
    forearm ={  # object pose
                      'pose'=> [0,0,0,
                                     0,0,0],
                      # inetia 
                      'pose_i'=> [0,0,0.09,
                                       0,0,0],                   
                      'mass'=>3.0,
                      'ixx'=> 0.0138 ,'ixy'=> 0     ,'ixz'=> 0 ,
                      'iyy'=> 0.0138 ,'iyz'=> 0     ,'izz'=> 0.00744 
            }
    # relative pose
    wrist = {   # object pose
                'pose'=> [0.0,-0.01,0.213,
                          0,0,0],
                # inetia 
                'pose_i'=> [0,0,0.029,
                                0,0,0],                   
                'mass'=> 0.1,
                'ixx'=> 0.000035 ,'ixy'=> 0     ,'ixz'=> 0 ,
                'iyy'=> 0.000064 ,'iyz'=> 0     ,'izz'=> 0.0000438, 
                # joint
                "name"       =>"wrist",
                "p_name"     =>"forearm",
                "j_name"     =>"WRJ2",
                "j_type"     =>"revolute",
                "j_axis"     => [0,1,0],
                "j_limit"    => [-0.523599,0.174533], #[lower,upper]
                "j_effort"   => 10,
                "j_velocity" => 2.0,
                "j_damping"  => 0.1,
                "j_friction" => 0.0,
                "j_spring_reference" => 0.0,
                "j_spring_stiffness" => 0.0,

    }
    palm =  {  # object pose
                    'pose'=> [0.0,-0.01,0.247,
                              0,0,0],
                    # inetia 
                    'pose_i'=> [0,0,0.035,
                                    0,0,0],                   
                    'mass'=> 0.3,
                    'ixx'=> 0.0003581 ,'ixy'=> 0     ,'ixz'=> 0 ,
                    'iyy'=> 0.0005287 ,'iyz'=> 0     ,'izz'=> 0.000191,
                    # joint
                    "name"       =>"palm",
                    "p_name"     =>"wrist",
                    "j_name"     =>"WRJ1",
                    "j_type"     =>"revolute",
                    "j_axis"     => [1,0,0],
                    "j_limit"    => [-0.698132,0.488692], #[lower,upper]
                    "j_effort"   => 30,
                    "j_velocity" => 2.0,
                    "j_damping"  => 0.1,
                    "j_friction" => 0.0,
                    "j_spring_reference" => 0.0,
                    "j_spring_stiffness" => 0.0,
            }
    
    #finger
    # This value move the finger object in x y z         
    biase = [0,0,0]
    ff = Finger.new(palm,biase,"FF")
    biase = [-0.022,0,0.004]
    mf =  Finger.new(palm,biase,"MF")
    biase = [-0.044,0,0]
    rf  = Finger.new(palm,biase,"RF")
    fingers =[ff,mf,rf]
    #finger joints
    #knucle is exclided and defined on its own
    j_finger_L = [ff.proximal,ff.middle,ff.distal]#axis tag for all the fingers are all the same. so gonna take one of them for all
    
    
    #thumb
    thumb = Thumb.new(palm)
    #thumb joints
    #thhub is not included becuase it has a fixed joint
    j_thumb_L = [thumb.thbase,thumb.thproximal,thumb.thmiddle,thumb.thdistal]
   
    #little finger
    biase = [-0.066,0,0]
    lf = LFinger.new(palm,biase,"LF")


%>
<sdf version='1.6'>

<model name='shadow_hand'>
    <static>true</static>
    <link name = "forearm_link">
        <pose frame=''><%=a_to_s(forearm['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(forearm['pose_i'])%></pose>
            <mass><%=forearm['mass']%></mass>
            <inertia>
                <ixx><%=forearm['ixx']%></ixx>
                <ixy><%=forearm['ixy']%></ixy>
                <ixz><%=forearm['ixz']%></ixz>
                <iyy><%=forearm['iyy']%></iyy>
                <iyz><%=forearm['iyz']%></iyz>
                <izz><%=forearm['izz']%></izz>
            </inertia>
        </inertial>

        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%=forearm_path%></uri>
                </mesh>
            </geometry>
            <material>

            </material>
        </visual>
        <collision name='collision'>
           
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%=forearm_path%></uri>
                </mesh>
            </geometry>
        </collision>
        <gravity>1</gravity>
        <velocity_decay/>
        <self_collide>0</self_collide>
    </link>
    <link name = "wrist_link">
        <pose frame=''><%=a_to_s(wrist['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(wrist['pose_i'])%></pose>
            <mass><%=wrist['mass']%></mass>
            <inertia>
                <ixx><%=wrist['ixx']%></ixx>
                <ixy><%=wrist['ixy']%></ixy>
                <ixz><%=wrist['ixz']%></ixz>
                <iyy><%=wrist['iyy']%></iyy>
                <iyz><%=wrist['iyz']%></iyz>
                <izz><%=wrist['izz']%></izz>
            </inertia>
        </inertial>

        <visual name='visual'>
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%=wrist_path%></uri>
                </mesh>
            </geometry>
            <material>

            </material>
        </visual>
        <collision name='collision'>
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%=wrist_path%></uri>
                </mesh>
            </geometry>
        </collision>
        <gravity>1</gravity>
        <velocity_decay/>
        <self_collide>0</self_collide>
    </link>
     <joint name='<%=wrist['j_name']%>' type='<%=wrist['j_type']%>'>
        <child><%=wrist['name']%>_link</child>
        <parent><%=wrist['p_name']%>_link</parent>
        <axis>
            <xyz><%=a_to_s(wrist['j_axis'])%></xyz>
            <limit>
                <lower><%=wrist['j_limit'][0]%></lower>
                <upper><%=wrist['j_limit'][1]%></upper>
                <effort><%=wrist['j_effort']%></effort>
                <velocity><%=wrist['j_velocity']%></velocity>
            </limit>
            <dynamics>
                <damping><%=wrist['j_damping']%></damping>
                <friction><%=wrist['j_friction']%></friction>
                <spring_reference><%=wrist['j_spring_reference']%></spring_reference>
                <spring_stiffness><%=wrist['j_spring_stiffness']%></spring_stiffness>
            </dynamics>
            <use_parent_model_frame>1</use_parent_model_frame>
        </axis>
        <physics>
            <provide_feedback>1</provide_feedback>
            <ode>
              <provide_feedback>1</provide_feedback>
              <implicit_spring_damper>1</implicit_spring_damper>
              <cfm_damping>1</cfm_damping>
              <limit>
                <cfm>0</cfm>
                <erp>0.2</erp>
              </limit>
            </ode>
        </physics>
    </joint>  


    <link name = "palm_link">
        <pose frame=''><%=a_to_s(palm['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(palm['pose_i'])%></pose>
            <mass><%=palm['mass']%></mass>
            <inertia>
                <ixx><%=palm['ixx']%></ixx>
                <ixy><%=palm['ixy']%></ixy>
                <ixz><%=palm['ixz']%></ixz>
                <iyy><%=palm['iyy']%></iyy>
                <iyz><%=palm['iyz']%></iyz>
                <izz><%=palm['izz']%></izz>
            </inertia>
        </inertial>
	  
        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>-0.001 0.001 0.001</scale>
                    <uri><%= palm_path_m %></uri>
                </mesh>
            </geometry>
            <material>

            </material>
        </visual>
        <collision name='collision'>
            
            <geometry>
                <mesh>
                    <scale>-0.001 0.001 0.001</scale>
                    <uri><%= palm_path_m %></uri>
                </mesh>
            </geometry>
            <material>

            </material>
        </collision>
        <gravity>1</gravity>
        <velocity_decay/>
        <self_collide>0</self_collide>
   
    </link>
    <joint name='<%=palm['j_name']%>' type='<%=palm['j_type']%>'>
        <child><%=palm['name']%>_link</child>
        <parent><%=palm['p_name']%>_link</parent>
        <axis>
            <xyz><%=a_to_s(palm['j_axis'])%></xyz>
            <limit>
                <lower><%=palm['j_limit'][0]%></lower>
                <upper><%=palm['j_limit'][1]%></upper>
                <effort><%=palm['j_effort']%></effort>
                <velocity><%=palm['j_velocity']%></velocity>
            </limit>
            <dynamics>
                <damping><%=palm['j_damping']%></damping>
                <friction><%=palm['j_friction']%></friction>
                <spring_reference><%=palm['j_spring_reference']%></spring_reference>
                <spring_stiffness><%=palm['j_spring_stiffness']%></spring_stiffness>
            </dynamics>
            <use_parent_model_frame>1</use_parent_model_frame>
        </axis>
        <physics>
            <provide_feedback>1</provide_feedback>
            <ode>
              <provide_feedback>1</provide_feedback>
              <implicit_spring_damper>1</implicit_spring_damper>
              <cfm_damping>1</cfm_damping>
              <limit>
                <cfm>0</cfm>
                <erp>0.2</erp>
              </limit>
            </ode>
        </physics>
    </joint>   


   <%fingers.each do |finger|%>
  
    <link name = "knuckle_link_<%=finger.fingername%>">
        
        <pose frame=''><%=a_to_s(finger.knuckle['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(finger.knuckle['pose_i'])%></pose>
            <mass><%=finger.knuckle['mass']%></mass>
            <inertia>
                <ixx><%=finger.knuckle['ixx']%></ixx>
                <ixy><%=finger.knuckle['ixy']%></ixy>
                <ixz><%=finger.knuckle['ixz']%></ixz>
                <iyy><%=finger.knuckle['iyy']%></iyy>
                <iyz><%=finger.knuckle['iyz']%></iyz>
                <izz><%=finger.knuckle['izz']%></izz>
            </inertia>
        </inertial>
      
        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= knuckle_path %></uri>
                </mesh>
            </geometry>
            <material>

            </material>
        </visual>
        <collision name='collision'>
            <pose frame=''>0 0 0 0 1.5708 0</pose>
            <geometry>
                <cylinder>
                    <radius>0.007</radius> 
                    <length>0.014</length> 
                </cylinder> 
            </geometry>
        </collision>
        <gravity>1</gravity>
        <velocity_decay/>
        <self_collide>0</self_collide>
    </link>

    <link name = "proximal_link_<%=finger.fingername%>">
        <pose frame=''><%=a_to_s(finger.proximal['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(finger.proximal['pose_i'])%></pose>
            <mass><%=finger.proximal['mass']%></mass>
            <inertia>
                <ixx><%=finger.proximal['ixx']%></ixx>
                <ixy><%=finger.proximal['ixy']%></ixy>
                <ixz><%=finger.proximal['ixz']%></ixz>
                <iyy><%=finger.proximal['iyy']%></iyy>
                <iyz><%=finger.proximal['iyz']%></iyz>
                <izz><%=finger.proximal['izz']%></izz>
            </inertia>
        </inertial>
        
        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= proximal_path %></uri>
                </mesh>
            </geometry>
            <material>

            </material>
        </visual>
        <collision name='collision'>
            <pose frame=''>0 0 0.025 0 0 0</pose>
            <geometry>
                <cylinder>
                    <radius>0.007</radius> 
                    <length>0.040</length> 
                </cylinder> 
            </geometry>
        </collision>
        <gravity>1</gravity>
        <velocity_decay/>
        <self_collide>0</self_collide>
    </link>
    <link name = "middle_link_<%=finger.fingername%>">
        <pose frame=''><%=a_to_s(finger.middle['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(finger.middle['pose_i'])%></pose>
            <mass><%=finger.middle['mass']%></mass>
            <inertia>
                <ixx><%=finger.middle['ixx']%></ixx>
                <ixy><%=finger.middle['ixy']%></ixy>
                <ixz><%=finger.middle['ixz']%></ixz>
                <iyy><%=finger.middle['iyy']%></iyy>
                <iyz><%=finger.middle['iyz']%></iyz>
                <izz><%=finger.middle['izz']%></izz>
            </inertia>
        </inertial>
      
        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= middle_path %></uri>
                </mesh>
            </geometry>
            <material>
                <script>
                    <uri>file://media/materials/scripts/gazebo.material</uri>
                    <name>Gazebo/Blue</name>
                </script>
            </material>
        </visual>
        <collision name='collision'>
            <pose frame=''>0 0 0.0125 0 0 0</pose>
            <geometry>
                <cylinder>
                    <radius>0.007</radius> 
                    <length>0.025</length> 
                </cylinder> 
            </geometry>
        </collision>
        <gravity>1</gravity>
        <velocity_decay/>
        <self_collide>0</self_collide>
    </link>
    <link name = "distal_link_<%=finger.fingername%>">
        <pose frame=''><%=a_to_s(finger.distal['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(finger.distal['pose_i'])%></pose>
            <mass><%=finger.distal['mass']%></mass>
            <inertia>
                <ixx><%=finger.distal['ixx']%></ixx>
                <ixy><%=finger.distal['ixy']%></ixy>
                <ixz><%=finger.distal['ixz']%></ixz>
                <iyy><%=finger.distal['iyy']%></iyy>
                <iyz><%=finger.distal['iyz']%></iyz>
                <izz><%=finger.distal['izz']%></izz>
            </inertia>
        </inertial>
      
        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= distal_path %></uri>
                </mesh>
            </geometry>
            <material>
                 <script>
                    <uri>file://media/materials/scripts/gazebo.material</uri>
                    <name>Gazebo/Red</name>
                </script>
            </material>
        </visual>
        <collision name='collision'>
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= distal_path %></uri>
                </mesh>
            </geometry>
        </collision>
        <gravity>1</gravity>
        <velocity_decay/>
        <self_collide>0</self_collide>
    </link>
    
    <%j_finger_L.each do |f_L|%>
        <joint name="<%=f_L['j_name']%>_<%=finger.fingername%>" type="<%=f_L['j_type']%>">
            <child><%=f_L['name']%>_link_<%=finger.fingername%></child>
            <parent><%=f_L['p_name']%>_link_<%=finger.fingername%></parent>
            
            <axis>
                <xyz><%=a_to_s(f_L['j_axis'])%></xyz>
                <limit>
                    <lower><%=f_L['j_limit'][0]%> </lower>
                    <upper><%=f_L['j_limit'][1]%> </upper>
                    <effort><%=f_L['j_effort']%> </effort>
                    <velocity><%=f_L['j_velocity']%> </velocity>
                </limit>
                <dynamics>
                    <damping><%=f_L['j_damping']%></damping>
                    <friction><%=f_L['j_friction']%></friction>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame>
            </axis>
            <physics>
                <provide_feedback>1</provide_feedback>
                <ode>
                  <provide_feedback>1</provide_feedback>
                  <implicit_spring_damper>1</implicit_spring_damper>
                  <cfm_damping>1</cfm_damping>
                  <limit>
                    <cfm>0</cfm>
                    <erp>0.2</erp>
                  </limit>
                </ode>
            </physics>
        </joint>
    <%end%>
    <joint name='<%=ff.knuckle['j_name']%>_<%=finger.fingername%>' type="<%=ff.knuckle['j_type']%>">
        <child><%=ff.knuckle['name']%>_link_<%=finger.fingername%></child>
        <parent><%=ff.knuckle['p_name']%>_link</parent>
        
        <axis>
            <xyz><%=a_to_s(ff.knuckle['j_axis'])%></xyz>
            <limit>
                <lower><%=ff.knuckle['j_limit'][0]%> </lower>
                <upper><%=ff.knuckle['j_limit'][1]%> </upper>
                <effort><%=ff.knuckle['j_effort']%> </effort>
                <velocity><%=ff.knuckle['j_velocity']%> </velocity>
            </limit>
            <dynamics>
                <damping><%=ff.knuckle['j_damping']%></damping>
                <friction>0</friction>
                <spring_reference>0</spring_reference>
                <spring_stiffness>0</spring_stiffness>
            </dynamics>
            <use_parent_model_frame>1</use_parent_model_frame>
        </axis>
        <physics>
            <provide_feedback>1</provide_feedback>
            <ode>
            <provide_feedback>1</provide_feedback>
            <implicit_spring_damper>1</implicit_spring_damper>
            <cfm_damping>1</cfm_damping>
            <limit>
                <cfm>0</cfm>
                <erp>0.2</erp>
            </limit>
            </ode>
        </physics>
    </joint>

   <%end%>

    <link name = "metacarpal_link_lf">
        <pose frame=''><%=a_to_s(lf.metacarpal['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(lf.metacarpal['pose_i'])%></pose>
            <mass><%=lf.metacarpal['mass']%></mass>
            <inertia>
                <ixx><%=lf.metacarpal['ixx']%></ixx>
                <ixy><%=lf.metacarpal['ixy']%></ixy>
                <ixz><%=lf.metacarpal['ixz']%></ixz>
                <iyy><%=lf.metacarpal['iyy']%></iyy>
                <iyz><%=lf.metacarpal['iyz']%></iyz>
                <izz><%=lf.metacarpal['izz']%></izz>
            </inertia>
        </inertial>
        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= lfmetacarpal %></uri>
                </mesh>
            </geometry>
            <material>

            </material>
        </visual>
        <collision name='collision'>
            <pose frame=''>0 0 0 0 0 0</pose>
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= lfmetacarpal %></uri>
                </mesh>
            </geometry>
        </collision>
        <gravity>1</gravity>
        <velocity_decay/>
        <self_collide>0</self_collide>
    </link>
    <link name = "knuckle_link_lf">
        
        <pose frame=''><%=a_to_s(lf.knuckle['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(lf.knuckle['pose_i'])%></pose>
            <mass><%=lf.knuckle['mass']%></mass>
            <inertia>
                <ixx><%=lf.knuckle['ixx']%></ixx>
                <ixy><%=lf.knuckle['ixy']%></ixy>
                <ixz><%=lf.knuckle['ixz']%></ixz>
                <iyy><%=lf.knuckle['iyy']%></iyy>
                <iyz><%=lf.knuckle['iyz']%></iyz>
                <izz><%=lf.knuckle['izz']%></izz>
            </inertia>
        </inertial>
      
        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= knuckle_path %></uri>
                </mesh>
            </geometry>
            <material>

            </material>
        </visual>
        <collision name='collision'>
            <pose frame=''>0 0 0 0 1.5708 0</pose>
            <geometry>
                <cylinder>
                    <radius>0.007</radius> 
                    <length>0.014</length> 
                </cylinder> 
            </geometry>
        </collision>
    </link>

    <link name = "proximal_link_lf">
        <pose frame=''><%=a_to_s(lf.proximal['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(lf.proximal['pose_i'])%></pose>
            <mass><%=lf.proximal['mass']%></mass>
            <inertia>
                <ixx><%=lf.proximal['ixx']%></ixx>
                <ixy><%=lf.proximal['ixy']%></ixy>
                <ixz><%=lf.proximal['ixz']%></ixz>
                <iyy><%=lf.proximal['iyy']%></iyy>
                <iyz><%=lf.proximal['iyz']%></iyz>
                <izz><%=lf.proximal['izz']%></izz>
            </inertia>
        </inertial>
        
        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= proximal_path %></uri>
                </mesh>
            </geometry>
            <material>

            </material>
        </visual>
        <collision name='collision'>
            <pose frame=''>0 0 0.025 0 0 0</pose>
            <geometry>
                <cylinder>
                    <radius>0.007</radius> 
                    <length>0.040</length> 
                </cylinder> 
            </geometry>
        </collision>
    </link>
    <link name = "middle_link_lf">
        <pose frame=''><%=a_to_s(lf.middle['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(lf.middle['pose_i'])%></pose>
            <mass><%=lf.middle['mass']%></mass>
            <inertia>
                <ixx><%=lf.middle['ixx']%></ixx>
                <ixy><%=lf.middle['ixy']%></ixy>
                <ixz><%=lf.middle['ixz']%></ixz>
                <iyy><%=lf.middle['iyy']%></iyy>
                <iyz><%=lf.middle['iyz']%></iyz>
                <izz><%=lf.middle['izz']%></izz>
            </inertia>
        </inertial>
      
        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= middle_path %></uri>
                </mesh>
            </geometry>
            <material>
                <script>
                    <uri>file://media/materials/scripts/gazebo.material</uri>
                    <name>Gazebo/Blue</name>
                </script>
            </material>
        </visual>
        <collision name='collision'>
            <pose frame=''>0 0 0.0125 0 0 0</pose>
            <geometry>
                <cylinder>
                    <radius>0.007</radius> 
                    <length>0.025</length> 
                </cylinder> 
            </geometry>
        </collision>
    </link>
    <link name = "distal_link_lf">
        <pose frame=''><%=a_to_s(lf.distal['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(lf.distal['pose_i'])%></pose>
            <mass><%=lf.distal['mass']%></mass>
            <inertia>
                <ixx><%=lf.distal['ixx']%></ixx>
                <ixy><%=lf.distal['ixy']%></ixy>
                <ixz><%=lf.distal['ixz']%></ixz>
                <iyy><%=lf.distal['iyy']%></iyy>
                <iyz><%=lf.distal['iyz']%></iyz>
                <izz><%=lf.distal['izz']%></izz>
            </inertia>
        </inertial>
      
        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= distal_path %></uri>
                </mesh>
            </geometry>
            <material>
                 <script>
                    <uri>file://media/materials/scripts/gazebo.material</uri>
                    <name>Gazebo/Red</name>
                </script>
            </material>
        </visual>
        <collision name='collision'>
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= distal_path %></uri>
                </mesh>
            </geometry>
        </collision>
    </link>


    <link name = "thbases_link">
        <pose frame=''><%=a_to_s(thumb.thbase['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(thumb.thbase['pose_i'])%></pose>
            <mass><%=thumb.thbase['mass']%></mass>
            <inertia>
                <ixx><%=thumb.thbase['ixx']%></ixx>
                <ixy><%=thumb.thbase['ixy']%></ixy>
                <ixz><%=thumb.thbase['ixz']%></ixz>
                <iyy><%=thumb.thbase['iyy']%></iyy>
                <iyz><%=thumb.thbase['iyz']%></iyz>
                <izz><%=thumb.thbase['izz']%></izz>
            </inertia>
        </inertial>
        <visual name='visual'>
            
            <geometry>
                <box>
                    <size>0.001 0.001 0.001</size>
                </box>
            </geometry>
            <material>

            </material>
        </visual>
        <collision name='collision'>
            <pose frame=''>0 0 0 0 0 0</pose>
            <geometry>
                <sphere>
                    <radius>0.011</radius>
                </sphere>
            </geometry>
        </collision>
        <gravity>1</gravity>
        <velocity_decay/>
        <self_collide>0</self_collide>
    </link>
    <link name = "thproximal_link">
            
        <pose frame=''><%=a_to_s(thumb.thproximal['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(thumb.thproximal['pose_i'])%></pose>
            <mass><%=thumb.thproximal['mass']%></mass>
            <inertia>
                <ixx><%=thumb.thproximal['ixx']%></ixx>
                <ixy><%=thumb.thproximal['ixy']%></ixy>
                <ixz><%=thumb.thproximal['ixz']%></ixz>
                <iyy><%=thumb.thproximal['iyy']%></iyy>
                <iyz><%=thumb.thproximal['iyz']%></iyz>
                <izz><%=thumb.thproximal['izz']%></izz>
            </inertia>
        </inertial>
    
        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= thumb.meshPath['thproximal'] %></uri>
                </mesh>
            </geometry>
            <material>

            </material>
        </visual>
        <collision name='collision'>
            <pose frame=''>0 0 0.020 0 0 0</pose>
            <geometry>
                <cylinder>
                    <radius>0.012</radius>
                    <length>0.018</length>
                </cylinder>
            </geometry>
        </collision>
    </link>
    <link name = "thmiddle_link">
            
        <pose frame=''><%=a_to_s(thumb.thmiddle['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(thumb.thmiddle['pose_i'])%></pose>
            <mass><%=thumb.thmiddle['mass']%></mass>
            <inertia>
                <ixx><%=thumb.thmiddle['ixx']%></ixx>
                <ixy><%=thumb.thmiddle['ixy']%></ixy>
                <ixz><%=thumb.thmiddle['ixz']%></ixz>
                <iyy><%=thumb.thmiddle['iyy']%></iyy>
                <iyz><%=thumb.thmiddle['iyz']%></iyz>
                <izz><%=thumb.thmiddle['izz']%></izz>
            </inertia>
        </inertial>

        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= thumb.meshPath['thmiddle'] %></uri>
                </mesh>
            </geometry>
            <material>

            </material>
        </visual>

        <collision name='collision'>
            <pose frame=''>0 0 0.012 0 0 0</pose>
            <geometry>
                <cylinder>
                    <radius>0.011</radius>
                    <length>0.018</length>
                </cylinder>
            </geometry>
        </collision>
    </link>
    <link name = "thdistal_link">
            
        <pose frame=''><%=a_to_s(thumb.thdistal['pose'])%></pose>
        <inertial>
            <pose frame=''><%=a_to_s(thumb.thdistal['pose_i'])%></pose>
            <mass><%=thumb.thdistal['mass']%></mass>
            <inertia>
                <ixx><%=thumb.thdistal['ixx']%></ixx>
                <ixy><%=thumb.thdistal['ixy']%></ixy>
                <ixz><%=thumb.thdistal['ixz']%></ixz>
                <iyy><%=thumb.thdistal['iyy']%></iyy>
                <iyz><%=thumb.thdistal['iyz']%></iyz>
                <izz><%=thumb.thdistal['izz']%></izz>
            </inertia>
        </inertial>

        <visual name='visual'>
            
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= thumb.meshPath['thdistal'] %></uri>
                </mesh>
            </geometry>
            <material>

            </material>
        </visual>
        <collision name='collision'>
            <geometry>
                <mesh>
                    <scale>0.001 0.001 0.001</scale>
                    <uri><%= thumb.meshPath['thdistal'] %></uri>
                </mesh>
            </geometry>
        </collision>
    </link>
 
    <%j_thumb_L.each do |th_L|%>
        <joint name ="<%=th_L['j_name']%>"  type ="<%=th_L['j_type']%>">
            <child><%=th_L['name']%>_link</child>
            <parent><%=th_L['p_name']%>_link</parent>
            <axis>
                <xyz><%=a_to_s(th_L['j_axis'])%></xyz>
                <limit>
                    <lower><%=th_L['j_limit'][0]%> </lower>
                    <upper><%=th_L['j_limit'][1]%> </upper>
                    <effort><%=th_L['j_effort']%> </effort>
                    <velocity><%=th_L['j_velocity']%> </velocity>
                </limit>
                <dynamics>
                <damping><%=th_L['j_damping']%></damping>
                </dynamics>
            </axis>
        </joint>
    <%end%>
    <joint name ="<%=thumb.thhub['j_name']%>"  type ="<%=thumb.thhub['j_type']%>">
        <child><%=thumb.thhub['name']%>_link</child>
        <parent><%=thumb.thhub['p_name']%>_link</parent>
        <axis>
            <xyz><%=a_to_s(thumb.thhub['j_axis'])%></xyz>
        </axis>
    </joint>

 
--> 
</model>
</sdf>